---
# tasks file for mediawiki_settings

# - name: Удалить конфиг MediaWiki
#   ansible.builtin.file:
#     path: /var/www/html/LocalSettings.php
#     state: absent
#   become: true

- name: Запустить install.php для настройки MediaWiki
  ansible.builtin.command: |
    php /var/www/html/maintenance/install.php \
      --confpath=/var/www/html \
      --dbname="my_wiki" \
      --dbuser="wikiuser" \
      --dbpass="{{ postgres_wikiuser_password }}" \
      --dbserver="{{ hostvars['vm2']['ansible_host'] }}" \
      --dbtype=postgres \
      --lang=ru \
      --pass="{{ mediawiki_admin_password }}" \
      --scriptpath="" \
      --server="http://{{ hostvars[inventory_hostname]['ansible_host'] }}" \
      "s20691161wiki" \
      "admin"
  become: true
  become_user: www-data
  args:
    creates: /var/www/html/LocalSettings.php  # Не запускать, если файл уже есть
  when: inventory_hostname == 'vm2'
  no_log: true  # Скрывает пароли в логах

- name: Получить содержимое конфига vm2
  ansible.builtin.slurp:
    src: /var/www/html/LocalSettings.php
  register: local_settings_content
  delegate_to: vm2
  run_once: true
  when: inventory_hostname == 'vm3'

- name: Создать конфиг на vm3
  ansible.builtin.copy:
    content: "{{ local_settings_content.content | b64decode }}"
    dest: /var/www/html/LocalSettings.php
  when: inventory_hostname == 'vm3'

- name: Заменить веб-сервер конфига vm3
  ansible.builtin.replace:
    path: /var/www/html/LocalSettings.php
    regexp: "(\\$wgServer\\s*=\\s*[\"']).*?([\"'])"
    replace: "\\1http://{{ hostvars[inventory_hostname]['ansible_host'] }}\\2"
  when: inventory_hostname == 'vm3'

- name: Установить права конфига MediaWiki
  ansible.builtin.file:
    path: /var/www/html/LocalSettings.php
    owner: www-data
    group: www-data
    mode: '600'
